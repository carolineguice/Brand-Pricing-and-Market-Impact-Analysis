---
subtitle: "Due Dec 15, 2023"
colorlinks: true
code-line-numbers: true
format:
  pdf: 
    number-sections: true
    toc: false
    number-depth: 2
    fontsize: 9pt
    linestretch: 1.25
  docx: 
    number-sections: true
    toc: false
    number-depth: 2
    fontsize: 9pt
    linestretch: 1.25
knitr:
  opts_chunk:
    echo: true
    eval: true
    warning: true
    message: true
    error: true
execute: 
  cache: false
  freeze: false
editor_options: 
  chunk_output_type: inline
---

# Background

```{r}
#| echo: false
# load the dataset by running this code block.
pacman::p_load(dplyr,modelsummary,fixest)
data_product <- read.csv("https://www.dropbox.com/s/zdn14voui3o0zgb/data_product.csv?dl=1")

data_marketing <- read.csv("https://www.dropbox.com/s/tz8t1711ll9t10g/data_marketing.csv?dl=1")

data_sales <- read.csv("https://www.dropbox.com/s/synk0dokenr3m2a/data_sales.csv?dl=1")

```

# Data Wrangling 

```{r}
# Merge data_product and data_sales using right_join()
data_full <- data_product %>%
  right_join(data_sales, by = c('product_id' = 'product_id') )

# Merge data_marketing onto data_full using left_join() below
data_full <-  data_marketing %>%
  left_join(data_full, by = c('week_id' = 'week_id') )
  
```

```{r}
data_product %>%
  group_by(technology = c('LCD'), resolution = c('4k'), brand) %>%
  summarise(avg_price = mean(RRP, na.rm = T))%>%
  ungroup() %>%
  head(4) %>%
  arrange(-avg_price)
  
```

```{r}
#The below code calculates the average weekly sales of each brand. 
data_full%>%
  group_by(brand.y) %>%
  summarise(avg_sales = mean(sales, na.rm = T)) %>%
  ungroup() %>%
  arrange(-avg_sales)
  
```

```{r}

data_full <- data_full %>%
  mutate(final_price = RRP * (1 - discount))

# regression equation 1 
ols_1 <- feols(
  data = data_full,
  fml = sales ~ final_price + marketing_expense
)
  
```

```{r}
pacman::p_load(modelsummary)
modelsummary(ols_1,
             stars = T,
             gof_map = c('nobs','r.squared'))
```
```{r}
# factorize brand below
pacman::p_load(modelsummary,fixest,dplyr)

data_full <- data_full %>%
  mutate(brand_factor = factor(brand.x))

data_full <- data_full %>%
  mutate(brand_relevel = relevel(brand_factor,
                               ref = "Philips"))

levels(data_full$brand_relevel)


# run the regression below
ols_brandeffect <- feols(data = data_full,
                         fml = sales ~ final_price + marketing_expense + brand_relevel)

# report the results
modelsummary(ols_brandeffect,
             stars = TRUE,
             gof_map = c('nobs','r.squared'))
```
$$
sales =a+ b_1 * finalprice + b_2 marketingexpense +e
$$

```{r}
#| eval: false

# estimation code below 

### Stage 1
stage1 <- feols(fml = sales ~ final_price|
                       marketing_expense,
      data = data_full)

# mutate predicted new_cases in data_driver
data_full <- data_full %>%
  mutate(predicted_sales = predict(stage1))

### Stage 2
stage2 <- feols(fml = sales ~ predicted_sales |
                  marekting_expense,
                data = data_full)

modelsummary(list(IV_is_work_1ststage,IV_is_work_2ndstage),
             stars = TRUE)

```
